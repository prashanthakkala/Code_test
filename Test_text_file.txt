import pdfplumber
import pandas as pd

def extract_text_blocks(page):
    # Extract text blocks and their positions
    text_blocks = []
    for element in page.extract_words():
        text_blocks.append({
            'text': element['text'],
            'x0': element['x0'],
            'x1': element['x1'],
            'y0': element['y0'],
            'y1': element['y1']
        })
    return text_blocks

def group_text_blocks(text_blocks, vertical_tolerance=5, horizontal_tolerance=5):
    rows = []
    current_row = []
    last_y0 = None

    for block in text_blocks:
        if last_y0 is not None and abs(block['y0'] - last_y0) > vertical_tolerance:
            # End of the current row
            rows.append(current_row)
            current_row = []
        current_row.append(block['text'])
        last_y0 = block['y0']

    # Append the last row
    if current_row:
        rows.append(current_row)

    return rows

def process_table_data(rows):
    # Convert rows to DataFrame
    df = pd.DataFrame(rows)
    
    # Optionally, set column names if known
    # df.columns = ['Column1', 'Column2', 'Column3']
    
    return df

def extract_and_process_tables(pdf_path):
    with pdfplumber.open(pdf_path) as pdf:
        all_tables = []
        for page in pdf.pages:
            text_blocks = extract_text_blocks(page)
            rows = group_text_blocks(text_blocks)
            df = process_table_data(rows)
            all_tables.append(df)
    
    return all_tables

# Example usage
pdf_path = "your_pdf_file.pdf"
tables = extract_and_process_tables(pdf_path)

# Display the extracted tables
for idx, table in enumerate(tables):
    print(f"Table {idx + 1}:")
    print(table)
