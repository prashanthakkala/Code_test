import ocrmypdf
import pdfplumber
from reportlab.lib.pagesizes import letter
from reportlab.pdfgen import canvas

# Step 1: OCR the image-based PDF to make text searchable
input_pdf = "input.pdf"
ocr_pdf = "ocr_output.pdf"

# Run OCR using ocrmypdf
ocrmypdf.ocr(input_pdf, ocr_pdf, deskew=True, clean=True, force_ocr=True)

# Step 2: Extract text and lines using pdfplumber
output_text = []
output_lines = []

with pdfplumber.open(ocr_pdf) as pdf:
    for page in pdf.pages:
        # Extract text
        text = page.extract_text()
        output_text.append(f"Page {page.page_number}\n{text}\n")
        
        # Extract lines
        lines = page.lines
        output_lines.append({
            "page": page.page_number,
            "lines": [{"x0": line["x0"], "y0": line["y0"], 
                      "x1": line["x1"], "y1": line["y1"]} for line in lines]
        })

# Step 3: Create a new PDF with extracted data
output_pdf = "extracted_data.pdf"
c = canvas.Canvas(output_pdf, pagesize=letter)

# Add extracted text
text = c.beginText(40, 750)
text.setFont("Helvetica", 12)
for page_text in output_text:
    text.textLines(page_text)
c.drawText(text)

# Add extracted lines visualization
c.showPage()  # New page for lines visualization
for line_data in output_lines:
    c.setFont("Helvetica", 12)
    c.drawString(40, 750, f"Lines from Page {line_data['page']}:")
    y_position = 730
    for line in line_data["lines"]:
        # Draw line coordinates
        c.drawString(50, y_position, 
                    f"Line from ({line['x0']:.1f}, {line['y0']:.1f}) to ({line['x1']:.1f}, {line['y1']:.1f})")
        y_position -= 15
    c.showPage()

c.save()

print(f"OCR processed PDF saved as: {ocr_pdf}")
print(f"Extracted data PDF saved as: {output_pdf}")
