import fitz  # PyMuPDF

def remove_yellow_background(pdf_path, output_path):
    # Open the PDF
    pdf = fitz.open(pdf_path)

    # Iterate through each page
    for page_num in range(pdf.page_count):
        page = pdf.load_page(page_num)

        # Get all text instances
        blocks = page.get_text("dict")["blocks"]
        for block in blocks:
            if block['type'] == 0:  # Text block
                for line in block["lines"]:
                    for span in line["spans"]:
                        # Check if the background color is yellow
                        bg_color = span.get("bg")
                        if bg_color and bg_color == (1.0, 1.0, 0.0):  # RGB for yellow
                            # Replace text with same content but no background color
                            # Create a new text with the same content but without the highlight
                            page.insert_text(
                                (span["bbox"][0], span["bbox"][1]),
                                span["text"],
                                fontsize=span["size"],
                                color=(0, 0, 0),  # Black text
                                overlay=True
                            )
                            # Remove the original text with yellow background
                            page.add_redaction_annot(
                                fitz.Rect(span["bbox"]),
                                fill=(1, 1, 1)  # White background to cover up
                            )
                            page.apply_redactions()

    # Save the modified PDF
    pdf.save(output_path)
    pdf.close()

# Example usage
pdf_path = "your_file.pdf"
output_path = "output_no_yellow_background.pdf"
remove_yellow_background(pdf_path, output_path)
